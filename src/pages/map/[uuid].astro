---
import maps from '../../assets/maps.json';
import Layout from '../../layouts/Layout.astro';
import BackArrow from '../../components/Icons/BackArrow.astro';

export function getStaticPaths() {
  return maps.map((map) => ({
    params: {
      uuid: map.uuid,
    },
    props: {...map},
  }));
}

const {uuid} = Astro.params;

const { displayName:name, narrativeDescription:desc, displayIcon, splash, coordinates, tacticalDescription } = Astro.props;

const bombsAmount = tacticalDescription === 'A/B Sites' ? '2 sites' : '3 sites'

---
<Layout title={`ValorantPedia | ${name}`} description={desc}>
  <div class="relative flex items-center justify-center h-80 z-0" >
    <a transition:animate="slide" href="/" class="flex gap-2 absolute top-2 left-2 z-30 bg-white/50 rounded px-2 py-0.5">
      <BackArrow size='1rem' color='black'/>
      <span>Volver</span>
    </a>
    <div class="absolute top-2 right-2 flex flex-col items-end">
      <div class="  z-40 flex items-center opacity-50">
        <img class="w-6" src="/assets/spike.png" alt="spike">
        <span class="text-white uppercase" >{bombsAmount}</span>
      </div>
      <span transition:name={`mapCoordinates-${uuid}`} class="z-10 text-xs text-white/50" >{coordinates}</span>
    </div>
    <img 
      transition:name={`mapImage-${uuid}`} 
      class="absolute w-full h-full object-cover brightness-75" 
      src={splash} 
      alt={name}
    />
    <div class=" absolute bottom-0 w-full h-8 bg-gradient-to-t from-slate-900 to-slate-900/0" />
    <h2 transition:name={`mapName-${name}`} class="z-10 text-5xl font-bold uppercase text-white drop-shadow-lg pb-8">{name}</h2>
  </div>
  <div class="z-10 relative bg-white mx-4 -mt-12 rounded-lg p-4">
    <h3 class="text-2xl font-bold uppercase text-valorant">// Descripci√≥n</h3>
    <p class="">{desc}</p>
    <h3 class="mt-6 text-2xl font-bold uppercase text-valorant">// Mapa</h3>
    <img class="bg-red-100 rounded-full" src={displayIcon} alt={`${name}-map`}>
  </div>
</Layout>